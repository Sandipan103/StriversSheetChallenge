#include <bits/stdc++.h> 
/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
void inorder(TreeNode* root, vector<int>& v)    {
    if(!root)   return;
    inorder(root->left, v);
    v.push_back(root->data);
    inorder(root->right, v);
}
vector<int> getInOrderTraversal(TreeNode *root) {
    vector<int> v;
    // inorder(root, v);
    stack<TreeNode*> st;
    while(root || !st.empty())  {
        if(root)    {
            st.push(root);
            root = root->left;
        }
        else{
            TreeNode* temp = st.top();
            st.pop();
            v.push_back(temp->data);
            root = temp->right;
        }
    }
    
    return v;
}