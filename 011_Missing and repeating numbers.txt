#include <bits/stdc++.h>

int firstBit(int x)	{
	int i=1;
	while(x)	{
		if(x&1)	return i;
		x >>= 1;
		i++;
	}
	return i;
}

bool check(int x, int bit)  {
    int i=1;
    while(x)    {
        if(i==bit && x&1)   return x&1;
        if(i>bit)   return false;
        i++;
        x >>= 1;
    }
    return false;
}

pair<int,int> missingAndRepeating(vector<int> &arr, int n)	{
	int x = 0;
	for(int i=0; i<n; i++)	
		x ^= (i+1), x ^= arr[i];
	int bit = firstBit(x);
	int a=0, b=0;
	for(int i=0; i<n; i++)	{
		if(check(i+1, bit))	a^=(i+1);
		else	b^=(i+1);
        if(check(arr[i], bit))	a^=arr[i];
		else	b^=arr[i];
	}

	for(int i=0; i<n; i++)	{
		if(arr[i] == a)	return	{b, a};
		if(arr[i] == b)	return	{a, b};
	}
	return {a, b};
}
