/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     int len=0;
     Node* temp = head;
     while(temp)
          len++, temp = temp->next;
     
     k %= len;
     if(k==0 || len<=1)  return head;  
     Node* fast = head, *slow = head;
     while(k--)  fast = fast->next;
     while(fast && fast->next)
     fast = fast->next, slow = slow->next;
     temp = slow->next;
     slow->next=NULL;
     slow=temp;
     while(slow->next)   slow=slow->next;
     slow->next=head;
     return temp;
}