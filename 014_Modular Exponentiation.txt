#include <bits/stdc++.h>
#define ll long long

ll power(ll x, ll n, ll m)   {
    if(n==0)    return 1;
    if(n==1)    return x;
    ll temp = power(x, n/2, m);
    if(n%2==0)
    return (temp * 1ll * temp) % m;
    else
    return (((temp * 1ll * temp) % m) * x ) % m;
}

ll myPow(ll x, ll n, ll m)   {
    if(n==0)    return 1;
    if(n==1)    return x;
    ll ans = 1;
    while(n)    {
        if(n&1) ans = (ans*x)%m;
        x=(x*x)%m;
        n >>= 1;
    }
    return ans%m;
}

int modularExponentiation(int x, int n, int m) {
    // return power(x, n, m) % m;
    return myPow(x, n, m) % m;
}