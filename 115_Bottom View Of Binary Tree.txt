#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    if(!root)   return {};
    vector<int> v;
    map<int, int> mp;
    queue<pair<BinaryTreeNode<int> *, int> > q;
    q.push({root, 0});
        
    while(!q.empty())   {
        pair<BinaryTreeNode<int> *, int> p = q.front();
        q.pop();
        mp[p.second] = p.first->data;
        if(p.first->left)   q.push({p.first->left, p.second-1});
        if(p.first->right)   q.push({p.first->right, p.second+1});
    }
        
    for(auto it : mp)  v.push_back(it.second);
    return v;
}
