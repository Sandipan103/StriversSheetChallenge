#include <bits/stdc++.h> 
/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
void preorder(TreeNode* root, vector<int>& v)   {
    if(!root)   return;
    v.push_back(root->data);
    preorder(root->left, v);
    preorder(root->right, v);
}

vector<int> getPreOrderTraversal(TreeNode *root)    {
    vector<int> v;
    // preorder(root, v);
    if(!root)   return v;
    stack<TreeNode*> st;
    st.push(root);
    while(!st.empty())  {
        TreeNode* temp = st.top();
        st.pop();
        v.push_back(temp->data);
        if(temp->right) st.push(temp->right);
        if(temp->left)  st.push(temp->left);
    }
    return v;
}